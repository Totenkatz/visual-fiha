{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "src/controller-app.js",
    "src/controller/details-view.js",
    "src/controller/sparkline-view.js",
    "src/controller/view.js",
    "src/layer/canvas/control-view.js",
    "src/layer/canvas/state.js",
    "src/layer/canvas/view.js",
    "src/layer/control-view.js",
    "src/layer/img/state.js",
    "src/layer/img/view.js",
    "src/layer/state.js",
    "src/layer/svg/state.js",
    "src/layer/svg/view.js",
    "src/layer/video/state.js",
    "src/layer/video/view.js",
    "src/layer/view.js",
    "src/mappable/control-view.js",
    "src/mappable/state.js",
    "src/midi/state.js",
    "src/screen/state.js",
    "src/screen/view.js",
    "src/signal/beat/control-view.js",
    "src/signal/beat/state.js",
    "src/signal/control-view.js",
    "src/signal/details-view.js",
    "src/signal/hsla/control-view.js",
    "src/signal/hsla/state.js",
    "src/signal/rgba/control-view.js",
    "src/signal/rgba/state.js",
    "src/signal/state.js",
    "src/suggestion-view.js",
    "src/transformation/control-view.js",
    "src/transformation/functions.js"
  ],
  "names": [],
  "mappings": "AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChdppBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClhxLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrlEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACll
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "'use strict';\nvar _view;\nvar ControllerView = require('./controller/view');\n\nfunction setupController(options) {\n  options = options || {};\n  if (!options.reboot && options.record) {\n    var stored = window.localStorage.getItem('zwv');\n    stored = stored ? JSON.parse(stored) : false;\n    options.screenLayers = stored ? stored.screenLayers : options.screenLayers;\n    options.screenSignals = stored ? stored.screenSignals : options.screenSignals;\n    console.info('import stored settings?', stored);\n  }\n\n  options.audioSource = 'https://archive.org/download/compilation_017/yttaaq_-_break_it.mp3';\n  if (!_view) {\n    _view = new ControllerView(options);\n  }\n\n  if (options.record) {\n    var prev;\n    var record = VFDeps.throttle(function(){\n      if (arguments[0] === 'frametime') return;\n      console.time('write json');\n      var json = JSON.stringify(_view.toJSON());\n      if (json !== prev) {\n        window.localStorage.setItem('zwv', json);\n      }\n      prev = json;\n      console.timeEnd('write json');\n    }, 1000 / 16);\n    _view.screenView.off('all', record);\n    _view.screenView.on('all', record);\n  }\n\n  return _view;\n}\n\nvar VF = window.VF || {};\nvar controllerSetup = VF._defaultSetup;\ncontrollerSetup.el = document.querySelector('.controller');\n// controllerSetup.record = window.location.hash === '#record';\nwindow.visualFiha = setupController(controllerSetup);\n",
    "'use strict';\nvar View = window.VFDeps.View;\nvar MappingControlView = require('./../mappable/control-view');\nvar DetailsView = View.extend({\n  template: [\n    '<section>',\n    '<header>',\n    '<h3>Details for <span data-hook=\"name\"></span></h3>',\n    '</header>',\n\n    '<div class=\"row mappings props\"></div>',\n    '</section>'\n  ].join('\\n'),\n\n  subviews: {\n    mappingsView: {\n      selector: '.mappings',\n      prepareView: function (el) {\n        return this.renderCollection(this.model.mappings, function (opts) {\n          var Constructor = MappingControlView[opts.model.targetProperty] || MappingControlView;\n          return new Constructor(opts);\n        }, el);\n      }\n    }\n  },\n\n  bindings: {\n    'model.name': '[data-hook=name]'\n  }\n});\nmodule.exports = DetailsView;",
    "'use strict';\nmodule.exports = VFDeps.View.extend({\n  autoRender: true,\n  template: '<canvas width=\"120\" height=\"29\"></canvas>',\n  session: {\n    data: ['array', true, function() {\n      return [];\n    }],\n    lineWidth: ['number', true, 1],\n    width: ['number', true, 120],\n    height: ['number', true, 29],\n    padding: ['number', true, 2],\n    color: ['string', true, '#000']\n  },\n  bindings: {\n    width: {\n      type: 'attribute',\n      name: 'width'\n    },\n    height: {\n      type: 'attribute',\n      name: 'height'\n    // },\n    // data: {\n    //   type: function() {\n    //     this.update();\n    //   }\n    }\n  },\n  derived: {\n    ctx: {\n      deps: ['el', 'width', 'height'],\n      fn: function() {\n        return this.el.getContext('2d');\n      }\n    },\n    innerW: {\n      deps: ['el', 'width'],\n      fn: function() {\n        return this.el.width - (2 * this.lineWidth);\n      }\n    },\n    innerH: {\n      deps: ['el', 'height'],\n      fn: function() {\n        return this.el.height - (2 * this.lineWidth);\n      }\n    }\n  },\n  max: function() {\n    var val = 0;\n    if (!this.data.length) { return val; }\n    this.data.forEach(function(d) {\n      val = Math.max(d, val);\n    });\n    return val;\n  },\n  min: function() {\n    var val = this.max();\n    if (!this.data.length) { return val; }\n    this.data.forEach(function(d) {\n      val = Math.min(d, val);\n    });\n    return val;\n  },\n  avg: function() {\n    var tt = 0;\n    if (!this.data.length) { return tt; }\n    this.data.forEach(function(v) {\n      tt += v;\n    });\n    return tt / (this.data.length);\n  },\n\n  update: function(newVal) {\n    if (!this.el) {\n      return this;\n    }\n    var lineWidth = this.lineWidth;\n    var ctx = this.ctx;\n    var avg = this.avg();\n    var min = this.min();\n    var max = this.max();\n\n    var padding = 2 * lineWidth;\n    var innerW = this.innerW;\n    var innerH = this.innerH;\n    var maxLength = Math.round(innerW / 2);\n\n    if (typeof newVal !== 'undefined') {\n      this.data.unshift(newVal);\n      if (this.data.length > maxLength) {\n        this.data = this.data.slice(0, -1);\n      }\n    }\n    var step = innerW / (this.data.length - 1);\n\n    function toPx(val) {\n      return ((innerH / max) * val) + padding;\n    }\n\n    ctx.clearRect(0, 0, this.width, this.height);\n\n    ctx.lineWidth = lineWidth;\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n    ctx.strokeStyle = this.color;\n    ctx.moveTo(innerW + padding, toPx(this.data[0]));\n    ctx.beginPath();\n\n    this.data.forEach(function(d, i) {\n      var right = (innerW - (step * i)) + padding;\n      var top = toPx(d);\n      ctx.lineTo(right, top);\n    });\n\n    var current = this.data[0] || 0;\n    ctx.stroke();\n    ctx.beginPath();\n    ctx.fillStyle = this.color;\n    ctx.arc(innerW + padding, toPx(current), lineWidth * 2, 0, 2 * Math.PI);\n    ctx.fill();\n\n    ctx.beginPath();\n    ctx.moveTo(padding, toPx(avg));\n    ctx.lineTo(padding + innerW, toPx(avg));\n    ctx.stroke();\n\n    current = Math.round(avg * 100) / 100;\n    ctx.textBaseline = 'middle';\n    ctx.textAlign = 'left';\n    ctx.font = (innerH * 0.5) + 'px monospace';\n    ctx.clearRect(0, padding, ctx.measureText(current).width + (padding * 2), innerH);\n    ctx.fillText(current, padding, (innerH * 0.5) + padding);\n\n    this.el.setAttribute('title', 'Min: ' + min + ', Max: ' + max + ', Avg: ' + avg);\n\n    return this;\n  }\n});\n",
    "'use strict';\nvar View = VFDeps.View;\nvar debounce = VFDeps.debounce;\nvar ResizeSensor = VFDeps.ResizeSensor;\n\nvar ScreenView = require('./../screen/view');\nvar ScreenState = require('./../screen/state');\nvar MIDIAccessState = require('./../midi/state');\nvar LayerControlView = require('./../layer/control-view');\nrequire('./../layer/canvas/control-view');\n// require('./../layer/video/control-view');\n// require('./../layer/img/control-view');\n// require('./../layer/svg/control-view');\nvar SignalControlView = require('./../signal/control-view');\nrequire('./../signal/beat/control-view');\nrequire('./../signal/hsla/control-view');\nrequire('./../signal/rgba/control-view');\n\nvar SuggestionView = require('./../suggestion-view');\nvar SparklineView = require('./sparkline-view');\n// var AceEditor = require('./ace-view');\n// var TimelineView = require('./timeline-view');\n\n\n\n\n\n\n\n\n\nvar ControllerView = View.extend({\n  initialize: function(options) {\n    var controllerView = this;\n\n    controllerView.model = controllerView.model || new ScreenState({\n      screenLayers: options.screenLayers,\n      screenSignals: options.screenSignals\n    });\n\n    if (controllerView.MIDIAccess) {\n      controllerView.listenTo(controllerView.MIDIAccess, 'all', function() {\n        controllerView.trigger.apply(controllerView, arguments);\n      });\n    }\n\n    if (window.BroadcastChannel) {\n      controllerView.channel = new window.BroadcastChannel('vf_bus');\n    }\n\n    // navigator.getUserMedia({\n    //   audio: true\n    // }, function(stream) {\n    //   var source = controllerView.audioContext.createMediaStreamSource(stream);\n    //   source.connect(controllerView.audioAnalyser);\n    // }, function(err) {\n    //   console.log('The following gUM error occured: ' + err);\n    // });\n\n    if (controllerView.el) {\n      controllerView._attachSuggestionHelper();\n    }\n    else {\n      controllerView.once('change:el', controllerView._attachSuggestionHelper);\n    }\n\n    if (options.autoStart !== false) {\n      this.play();\n    }\n  },\n\n  _animate: function(timestamp) {\n    if (this.controllerSparkline) {\n      this.controllerSparkline.update((timestamp - this.frametime) - this.firstframetime);\n    }\n    this.frametime = timestamp - this.firstframetime;\n    this.update({\n      frametime: this.frametime\n    });\n    this._animationRequest = window.requestAnimationFrame(this._animate.bind(this));\n  },\n\n  update: function(options) {\n    var newState = this.model.toJSON();\n\n    var analyser = this.audioAnalyser;\n    var bufferLength = analyser.frequencyBinCount;\n    var dataArray = this.audioAnalyserDataArray;\n    analyser.getByteFrequencyData(dataArray);\n\n    newState.mic = {};\n    for(var i = 0; i < bufferLength; i++) {\n      newState.mic['mic:' + i] = dataArray[i];\n    }\n\n    newState.frametime = options.frametime || 0;\n    this.channel.postMessage(newState);\n  },\n\n  derived: {\n    computedStyle: {\n      fn: function() {\n        return window.getComputedStyle(this.el);\n      }\n    },\n    midiAccess: {\n      fn: function() {\n        return new MIDIAccessState({\n          parent: this\n        });\n      }\n    },\n    signalNames: {\n      deps: ['screenView'],\n      fn: function () {\n        return this.screenView ? this.screenView.signalNames : [];\n      }\n    },\n\n    audioContext: {\n      deps: [],\n      fn: function() {\n        return new window.AudioContext();\n      }\n    },\n    audioAnalyser: {\n      deps: ['audioContext'],\n      fn: function() {\n        var analyser = this.audioContext.createAnalyser();\n        analyser.minDecibels = -90;\n        analyser.maxDecibels = -10;\n        analyser.smoothingTimeConstant = 0.85;\n        analyser.fftSize = 64;\n        return analyser;\n      }\n    },\n    audioAnalyserDataArray: {\n      deps: ['audioAnalyser'],\n      fn: function () {\n        return new window.Uint8Array(this.audioAnalyser.frequencyBinCount);\n      }\n    }\n  },\n\n  session: {\n    _animationRequest: 'number',\n    currentDetails: 'state'\n  },\n\n  play: function() {\n    console.info('play', this._animationRequest, this.firstframetime);\n    if (this._animationRequest) {\n      throw new Error('Animation already played');\n    }\n    this.firstframetime = this.firstframetime || performance.now();\n    return this._animate(this.firstframetime);\n  },\n  pause: function() {\n    console.info('pause', this._animationRequest, this.firstframetime);\n    if (this._animationRequest) {\n      window.cancelAnimationFrame(this._animationRequest);\n    }\n    this._animationRequest = null;\n    return this;\n  },\n  stop: function() {\n    console.info('stop', this._animationRequest, this.firstframetime);\n    this.pause();\n    this.firstframetime = 0;\n    return this;\n  },\n\n  subviews: {\n    /*\n    MIDIAccess: {\n      waitFor: 'el',\n      selector: '.midi-access',\n      prepareView: function(el) {\n        var subview = new window.MIDIAccessView({\n          parent: this,\n          el: el,\n          model: this.midiAccess\n        });\n        return subview;\n      }\n    },\n\n    timeline: {\n      waitFor: 'el',\n      selector: '.timeline',\n      prepareView: function(el) {\n        return new TimelineView({\n          el: el,\n          parent: this\n        });\n      }\n    },\n\n    codeEditor: {\n      waitFor: 'el',\n      selector: '.debug',\n      prepareView: function(el) {\n        return new AceEditor({\n          el: el,\n          parent: this\n        });\n      }\n    },\n    */\n\n    controllerSparkline: {\n      waitFor: 'el',\n      selector: '.fps-controller',\n      prepareView: function(el) {\n        var styles = window.getComputedStyle(el);\n        var view = new SparklineView({\n          parent: this,\n          color: styles.color\n        });\n        el.appendChild(view.el);\n        return view;\n      }\n    },\n\n    screenSparkline: {\n      waitFor: 'el',\n      selector: '.fps-screen',\n      prepareView: function(el) {\n        var styles = window.getComputedStyle(el);\n        var view = new SparklineView({\n          parent: this,\n          color: styles.color\n        });\n        el.appendChild(view.el);\n        return view;\n      }\n    },\n\n    screenView: {\n      waitFor: 'el',\n      selector: '.screen',\n      prepareView: function(el) {\n        if (this.screenView) {\n          this.screenView.remove();\n        }\n\n        var screenModel = new ScreenState(this.model.toJSON());\n        var screenView = new ScreenView({\n          parent: this,\n          el: el,\n          MIDIAccess: this.midiAccess,\n          model: screenModel,\n          mode: 'control'\n        });\n        this.listenTo(screenModel, 'change:latency', function() {\n          this.screenSparkline.update(screenModel.latency);\n        });\n\n        var p = this.query('.screen-cell').parentNode;\n        this.screenCellSensor = new ResizeSensor(p, debounce(function resize() {\n          screenView.resize(p);\n        }, 50));\n\n        return screenView;\n      }\n    },\n\n    screenLayersView: {\n      waitFor: 'el',\n      selector: '.layers .items',\n      prepareView: function(el) {\n        return this.renderCollection(this.model.screenLayers, function (opts) {\n          var type = opts.model.getType();\n          var Constructor = LayerControlView[type] || LayerControlView;\n          return new Constructor(opts);\n        }, el);\n      }\n    },\n\n    screenSignalsView: {\n      waitFor: 'el',\n      selector: '.signals .items',\n      prepareView: function(el) {\n        return this.renderCollection(this.model.screenSignals, function (opts) {\n          var type = opts.model.getType();\n          var Constructor = SignalControlView[type]|| SignalControlView;\n          return new Constructor(opts);\n        }, el);\n      }\n    }\n  },\n\n  _attachSuggestionHelper: function() {\n    if (this.suggestionHelper) { return; }\n    this.suggestionHelper = this.registerSubview(new SuggestionView({\n      parent: this\n    }));\n  },\n\n  remove: function() {\n    if (this.perfInterval) { clearInterval(this.perfInterval); }\n    if (this.screenCellSensor && this.screenCellSensor.detach) { this.screenCellSensor.detach(); }\n    View.prototype.remove.apply(this, arguments);\n  },\n\n  toJSON: function () {\n    return this.screenView.toJSON();\n  },\n\n  bindings: {\n    _animationRequest: [\n      {\n        type: 'toggle',\n        selector: '[name=\"play\"]',\n        invert: true\n      },\n      // {\n      //   type: 'toggle',\n      //   selector: '[name=\"stop\"]'\n      // },\n      {\n        type: 'toggle',\n        selector: '[name=\"pause\"]'\n      }\n    ]\n  },\n\n  events: {\n    'click [name=\"play\"]': 'play',\n    'click [name=\"pause\"]': 'pause',\n    'click [name=\"stop\"]': 'stop',\n    'click [name=\"debug\"]': '_debug',\n    'click [name=\"screen\"]': '_openScreen',\n    'click [name=\"ratio\"]': '_changeRatio'\n  },\n\n  _debug: function() {\n    this.screenView.captureDebug = true;\n  },\n\n  _openScreen: function() {\n    window.open('./screen.html', 'screen');\n  },\n\n  _changeRatio: function (evt) {\n    var val = evt.target.value;\n    this.screenView.ratio = val === '0' ? 0 : (val === '4/3' ? 4/3 : 16/9);\n    this.screenView.resize();\n  },\n\n  showDetails: function (view) {\n    if (view === this.currentDetails) { return this; }\n    this.detailsSwitcher.set(view);\n    return this;\n  },\n\n\n  render: function () {\n    var controllerView = this;\n    this.renderWithTemplate();\n\n    this.cacheElements({\n      jsHeapLimit: '.heap-limit span',\n      jsHeapTotal: '.heap-total span',\n      jsHeapUsed: '.heap-used span',\n      detailsEl: '.details'\n    });\n\n    this.detailsSwitcher = new VFDeps.ViewSwitcher(this.detailsEl, {\n      show: function (view) {\n        controllerView.currentDetails = view;\n      }\n    });\n\n    if (this.perfInterval) {\n      clearInterval(this.perfInterval);\n    }\n\n    // this.perfInterval = setInterval(function () {\n    //   controllerView.jsHeapLimit.textContent = performance.memory.jsHeapSizeLimit * 0.0001;\n    //   controllerView.jsHeapTotal.textContent = performance.memory.totalJSHeapSize * 0.0001;\n    //   controllerView.jsHeapUsed.textContent = performance.memory.usedJSHeapSize * 0.0001;\n    // }, 500);\n\n    return this;\n  },\n\n  autoRender: true,\n\n  template: '<div class=\"controller rows\">'+\n    '<div class=\"row columns gutter-horizontal header\">'+\n      '<div class=\"column no-grow gutter-right\">Visual Fiha</div>'+\n      '<div class=\"column columns\">'+\n        '<div class=\"column columns gutter-horizontal no-grow\">'+\n          '<span class=\"column columns gutter-horizontal button-group\">'+\n            '<button class=\"column gutter-horizontal\" name=\"play\"><span class=\"vfi-play\"></span></button>'+\n            '<button class=\"column gutter-horizontal\" name=\"pause\"><span class=\"vfi-pause\"></span></button>'+\n            '<button class=\"column gutter-horizontal\" name=\"stop\"><span class=\"vfi-stop\"></span></button>'+\n          '</span>'+\n        '</div>'+\n        '<div class=\"column columns gutter-horizontal no-grow\">'+\n          '<span class=\"column\">Screen ratio</span>'+\n          '<span class=\"column columns gutter-horizontal button-group\">'+\n            '<button class=\"column gutter-horizontal\" name=\"ratio\" value=\"16/9\">16/9</button>'+\n            '<button class=\"column gutter-horizontal\" name=\"ratio\" value=\"4/3\">4/3</button>'+\n            '<button class=\"column gutter-horizontal\" name=\"ratio\" value=\"0\">free</button>'+\n          '</span>'+\n          '<div class=\"column gutter-left\">'+\n            '<button name=\"screen\">Open screen</button>'+\n          '</div>'+\n        '</div>'+\n        '<div class=\"column gutter-horizontal no-grow columns performance\">'+\n          'Screen <span class=\"column fps-screen\"></span>'+\n          'Controller <span class=\"column fps-controller\"></span>'+\n        '</div>'+\n      '</div>'+\n      '<div class=\"column gutter-horizontal\">'+\n        '<button name=\"debug\">Debug</button>'+\n      '</div>'+\n    '</div>'+\n    '<div class=\"row columns body\">'+\n      '<div class=\"column grow-l rows\">'+\n        '<div class=\"row no-grow screen-cell\">'+\n          '<div class=\"screen\"></div>'+\n        '</div>'+\n        '<div class=\"row details\"></div>'+\n        '<div class=\"row debug no-grow\"></div>'+\n      '</div>'+\n      '<div class=\"column rows settings\">'+\n        '<div class=\"row columns\">'+\n          '<div class=\"column rows\">'+\n            '<div class=\"row layers\">'+\n              '<div class=\"section-name gutter\">Layers</div>'+\n              '<div class=\"columns gutter\">'+\n                '<div data-hook=\"type\" data-placeholder=\"Type\" contenteditable=\"true\" class=\"column gutter-right\">'+\n                '</div>'+\n                '<div class=\"column no-grow gutter-left\">'+\n                  '<button name=\"add-layer\" class=\"vfi-plus\"></button>'+\n                '</div>'+\n              '</div>'+\n              '<div class=\"items\"></div>'+\n            '</div>'+\n          '</div>'+\n          '<div class=\"column rows\">'+\n            '<div class=\"row signals\">'+\n              '<div class=\"section-name gutter\">Signals</div>'+\n              '<div class=\"columns gutter\">'+\n                '<div data-hook=\"type\" data-placeholder=\"Type\" contenteditable=\"true\" class=\"column gutter-right\">'+\n                '</div>'+\n                '<div class=\"column no-grow gutter-left\">'+\n                  '<button name=\"add-signal\" class=\"vfi-plus\"></button>'+\n                '</div>'+\n              '</div>'+\n              '<div class=\"items\"></div>'+\n            '</div>'+\n          '</div>'+\n        '</div>'+\n        '<div class=\"row no-grow audio-source\">'+\n          '<audio controls colume=\"0.5\"></audio>'+\n        '</div>'+\n      '</div>'+\n    '</div>'+\n  '</div>'\n});\nmodule.exports = ControllerView;",
    "'use strict';\nvar LayerControlView = require('./../control-view');\nvar DetailsView = require('./../../controller/details-view');\n\nvar ControlCanvasLayerView = VFDeps.View.extend({\n  template: [\n    '<section class=\"canvas-layer\">',\n    '<header class=\"columns\">',\n    '<div class=\"column no-grow gutter-right\"><button class=\"active prop-toggle\"></button></div>',\n    '<div class=\"column no-grow gutter-horizontal\"><button class=\"edit-draw-function vfi-cog-alt\"></button></div>',\n    '<h3 class=\"column layer-name gutter-horizontal\" data-hook=\"name\"></h3>',\n    '<div class=\"column no-grow text-right gutter-left\"><button class=\"vfi-trash-empty remove-layer\"></button></div>',\n    '</header>',\n    '</section>'\n  ].join(''),\n\n  session: {\n    showMappings: ['boolean', true, false]\n  },\n\n  derived: {\n    rootView: {\n      deps: ['parent'],\n      fn: function () {\n        for (var inst = this; inst; inst = inst.parent) {\n          if (!inst.parent) { return inst; }\n        }\n      }\n    },\n    codeEditor: {\n      deps: ['rootView'],\n      fn: function () {\n        return this.rootView.codeEditor;\n      }\n    }\n  },\n\n  events: {\n    'click .remove-layer': '_removeLayer',\n    'click .edit-draw-function': '_editDrawFunction',\n    'click .active.prop-toggle': '_toggleActive',\n    'click header [data-hook=name]': '_showMappings'\n  },\n\n  _removeLayer: function() {\n    this.model.collection.remove(this.model);\n  },\n  _editDrawFunction: function () {\n    var editor = this.codeEditor;\n    if (!editor.changed) {\n      editor.edit(this.model, 'drawFunction');\n    }\n    else {\n      console.warn('A function is already being edited');\n    }\n  },\n  _toggleActive: function () {\n    this.model.toggle('active');\n  },\n\n  _showMappings: function () {\n    this.rootView.showDetails(new DetailsView({\n      parent: this,\n      model: this.model,\n    }));\n  },\n\n  bindings: {\n    'model.active': [\n      {\n        type: 'booleanClass',\n        name: 'disabled',\n        invert: true\n      },\n\n      {\n        type: 'booleanClass',\n        selector: '.active.prop-toggle',\n        yes: 'vfi-toggle-on',\n        no: 'vfi-toggle-off'\n      }\n    ],\n\n    drawFunction: '[data-hook=drawFunction]',\n    'model.name': '[data-hook=name]',\n    'model.duration': '[data-hook=duration]',\n    'model.fps': '[data-hook=fps]',\n    'model.frametime': '[data-hook=frametime]'\n  }\n});\n\nmodule.exports = LayerControlView.canvas = LayerControlView.extend({\n  template: [\n    '<section class=\"row canvas-control\">',\n    '<header>',\n    '<h3>Canvas</h3>',\n    '<div class=\"columns\">',\n    '<div class=\"column gutter-right\" contenteditable=\"true\" data-placeholder=\"new-layer-name\" data-hook=\"new-layer-name\"></div>',\n    '<div class=\"column gutter-horizontal\" contenteditable=\"true\" data-placeholder=\"propA, propB\" data-hook=\"new-layer-props\"></div>',\n    '<div class=\"column no-grow gutter-left\">',\n    '<button name=\"add-layer\" class=\"vfi-plus\"></button>',\n    '</div>',\n    '</div>',\n    '</header>',\n\n    '<div class=\"layers\">',\n    '<div class=\"items\"></div>',\n    '</div>',\n    '</section>'\n  ].join(''),\n\n  events: {\n    'input [data-hook=new-layer-name]': '_inputLayerName',\n    'click [name=add-layer]': '_addLayer'\n  },\n\n  _inputLayerName: function() {\n    this.query('[name=add-layer]').disabled = !this.queryByHook('new-layer-name').textContent.trim();\n  },\n\n  _addLayer: function(evt) {\n    evt.preventDefault();\n    var nameEl = this.queryByHook('new-layer-name');\n    var name = nameEl.textContent.trim();\n    var propsEl = this.queryByHook('new-layer-props');\n    var propsVal = propsEl ? propsEl.textContent.split(',').map(function(s) { return s.trim(); }).filter(function(s) { return s; }) : [];\n\n    var props = {};\n    propsVal.forEach(function(prop) {\n      props[prop] = 'any';\n    });\n    var res = this.model.canvasLayers.add({\n      name: name,\n      drawFunction: 'function(ctx) {\\n  // ' + name + ' drawFunction\\n}',\n      props: props\n    });\n\n    if (!res) {\n      console.warn('new layer?', res);\n      return;\n    }\n    nameEl.textContent = '';\n    var layerControlView = this.model.canvasLayersView.views.find(function(v) {\n      return v.model === res;\n    });\n    if (!layerControlView.codeEditor.changed) {\n      layerControlView.codeEditor.edit(res, 'drawFunction');\n    }\n  },\n\n  initialize: function () {\n    this.once('change:rendered', this._inputLayerName);\n  },\n\n\n  subviews: {\n    canvasLayersView: {\n      waitFor: 'el',\n      selector: '.layers .items',\n      prepareView: function (el) {\n        return this.renderCollection(this.model.canvasLayers, ControlCanvasLayerView, el);\n      }\n    }\n  }\n});",
    "'use strict';\nvar ScreenLayerState = require('./../state');\n// var CanvasLayer = ScreenLayerState.extend({\nvar MappableState = require('./../../mappable/state');\nvar CanvasLayer = MappableState.extend({\n  idAttribute: 'name',\n\n  initialize: function() {\n    var mappings = this.mappings;\n    var propNames = Object.keys(this.constructor.prototype._definition).filter(function (propName) {\n      return ['drawFunction', 'name'].indexOf(propName) < 0;\n    });\n\n    propNames.forEach(function (propName) {\n      if (!mappings.get(propName)) {\n        mappings.add({\n          targetProperty: propName\n        });\n      }\n    });\n    return this;\n  },\n\n  props: {\n    weight: ['number', true, 0],\n    name: ['string', true, null],\n    active: ['boolean', true, true],\n    opacity: ['number', true, 100],\n    shadowOffsetX: ['number', true, 0],\n    shadowOffsetY: ['number', true, 0],\n    shadowBlur: ['number', true, 0],\n    shadowColor: ['string', true, 'rgba(0,0,0,0.5)'],\n    blending: {\n      type: 'string',\n      required: true,\n      default: 'source-over',\n      values: [\n        'source-over',\n        'source-in',\n        'source-out',\n        'source-atop',\n        'destination-over',\n        'destination-in',\n        'destination-out',\n        'destination-atop',\n        'lighter',\n        'copy',\n        'xor'\n      ]\n    },\n    drawFunction: 'any'\n  },\n\n\n  serialize: function() {\n    var obj = ScreenLayerState.prototype.serialize.apply(this, arguments);\n\n    var type = typeof this.drawFunction;\n    if (type === 'function') {\n      obj.drawFunction = this.drawFunction.toString();\n    }\n    else if (type === 'string') {\n      obj.drawFunction = this.drawFunction;\n    }\n\n    return obj;\n  },\n\n  derived: {\n    width: {\n      deps: ['collection', 'collection.parent', 'collection.parent.width'],\n      fn: function() {\n        return this.collection.parent.width || 400;\n      }\n    },\n    height: {\n      deps: ['collection', 'collection.parent', 'collection.parent.height'],\n      fn: function() {\n        return this.collection.parent.height || 300;\n      }\n    },\n    draw: {\n      deps: ['drawFunction'],\n      fn: function() {\n        var fn = this.drawFunction;\n        if (typeof fn === 'string') {\n          try {\n            eval('fn = (function() { return ' + this.drawFunction + '; })()');// jshint ignore:line\n          }\n          catch(err) {\n            console.warn('draw function error', err);\n          }\n        }\n        return (typeof fn === 'function' ? fn : function() {}).bind(this);\n      }\n    }\n  }\n});\n\nvar _CanvasLayersCache = {};\nvar CanvasLayers = VFDeps.Collection.extend({\n  mainIndex: CanvasLayer.prototype.idAttribute,\n\n  comparator: 'weight',\n\n  model: function (attrs, options) {\n    var def = {\n      props: attrs.props || {},\n      session: attrs.session || {},\n      derived: attrs.derived || {}\n    };\n    var Constructor = _CanvasLayersCache[attrs.name] || CanvasLayer.extend(def);\n    _CanvasLayersCache[attrs.name] = Constructor;\n    var inst =  new Constructor(attrs, options);\n    inst.on('change:weight', function() {\n      inst.collection.sort();\n    });\n    if (options.init === false) inst.initialize();\n    return inst;\n  }\n});\n\n\nmodule.exports = ScreenLayerState.canvas = ScreenLayerState.extend({\n  collections: {\n    canvasLayers: CanvasLayers\n  }\n});",
    "'use strict';\n\nvar ScreenLayerView = require('./../view');\nmodule.exports = ScreenLayerView.canvas = ScreenLayerView.extend({\n  template: [\n    '<canvas></canvas>'\n  ].join(''),\n\n  session: {\n    duration: ['number', true, 1000],\n    fps: ['number', true, 16],\n    frametime: ['number', true, 0],\n    width: ['number', true, 400],\n    height: ['number', true, 300]\n  },\n\n  bindings: {\n    width: {\n      name: 'width',\n      type: 'attribute'\n    },\n    height: {\n      name: 'height',\n      type: 'attribute'\n    }\n  },\n\n  derived: {\n    frames: {\n      deps: ['duration', 'fps'],\n      fn: function() {\n        return Math.round(this.duration / 1000 * this.fps);\n      }\n    },\n    frame: {\n      deps: ['frametime', 'fps'],\n      fn: function() {\n        return Math.round(((this.frametime % this.duration) / 1000) * this.fps);\n      }\n    },\n\n\n    direction: {\n      deps: ['frametime', 'duration'],\n      fn: function() {\n        return this.frame < this.frames * 0.5 ? 1 : -1;\n      }\n    },\n\n\n    offCanvas: {\n      deps: ['width', 'height'],\n      fn: function() {\n        var canvas = document.createElement('canvas');\n        canvas.width = this.width;\n        canvas.height = this.height;\n        return canvas;\n      }\n    },\n    ctx: {\n      deps: ['offCanvas'],\n      fn: function() {\n        return this.offCanvas.getContext('2d');\n      }\n    }\n  },\n\n  remove: function() {\n    return VFDeps.View.prototype.remove.apply(this, arguments);\n  },\n\n  update: function(options) {\n    options = options || {};\n    this.frametime = options.frametime || 0;\n\n    var ctx = this.ctx;\n    var cw = this.width;\n    var ch = this.height;\n    ctx.clearRect(0, 0, cw, ch);\n    // ctx.fillStyle = '#a66';\n    // ctx.fillRect(0, 0, cw, ch);\n\n    this.model.canvasLayers.filter(function (layer) {\n      return layer.active;\n    }).forEach(function(layer) {\n      ctx.shadowOffsetX = layer.shadowOffsetX;\n      ctx.shadowOffsetY = layer.shadowOffsetY;\n      ctx.shadowBlur = layer.shadowBlur;\n      ctx.shadowColor = layer.shadowColor;\n\n      ctx.globalAlpha = layer.opacity / 100;\n      ctx.globalCompositionOperation = layer.blending;\n\n      layer.draw(ctx);\n    });\n\n    var destCtx = this.el.getContext('2d');\n    destCtx.clearRect(0, 0, cw, ch);\n    destCtx.drawImage(this.offCanvas, 0, 0, cw, ch, 0, 0, cw, ch);\n\n    return this;\n  },\n\n  render: function() {\n    if (!this.el) {\n      this.renderWithTemplate();\n    }\n\n    return this.update();\n  }\n});",
    "'use strict';\nvar View = window.VFDeps.View;\nvar DetailsView = require('./../controller/details-view');\nvar LayerControlView = View.extend({\n  template: [\n    '<section class=\"default-layer-control\">',\n    '<header class=\"columns\">',\n    '<div class=\"column no-grow gutter-right\"><button class=\"active prop-toggle\"></button></div>',\n    '<h3 class=\"column layer-name gutter-left\" data-hook=\"name\"></h3>',\n    '</header>',\n\n      // '<div class=\"gutter\" data-hook=\"type\"></div>',\n\n    '<div class=\"preview gutter-horizontal\"></div>',\n\n    '<div class=\"mappings props\">',\n    '</div>',\n    '</section>'\n  ].join(''),\n\n  derived: {\n    rootView: {\n      deps: ['parent'],\n      fn: function () {\n        for (var inst = this; inst; inst = inst.parent) {\n          if (!inst.parent) { return inst; }\n        }\n      }\n    }\n  },\n\n  events: {\n    'click .active.prop-toggle': '_toggleActive',\n    'click header [data-hook=name]': '_showMappings'\n  },\n\n  _toggleActive: function () {\n    this.model.toggle('active');\n  },\n\n  _showMappings: function () {\n    this.rootView.showDetails(new DetailsView({\n      parent: this,\n      model: this.model,\n    }));\n  },\n\n  bindings: {\n    'model.active': [\n      {\n        type: 'booleanClass',\n        name: 'disabled',\n        invert: true\n      },\n\n      {\n        type: 'booleanClass',\n        selector: '.active.prop-toggle',\n        yes: 'vfi-toggle-on',\n        no: 'vfi-toggle-off'\n      }\n    ],\n    'model.name': {\n      hook: 'name',\n      type: 'text'\n    },\n    'model.type': [\n      {\n        hook: 'type',\n        type: 'text'\n      },\n      {\n        type: 'class'\n      }\n    ]\n  }\n});\nmodule.exports = LayerControlView;",
    "'use strict';\nvar ScreenLayerState = require('./../state');\nmodule.exports = ScreenLayerState.img = ScreenLayerState.extend({\n  props: {\n    src: ['string', true, null]\n  },\n\n  initialize: function() {\n    if (!this.src) {\n      throw new Error('Missing src attribute for img layer');\n    }\n  }\n});",
    "'use strict';\n\nvar ScreenLayerView = require('./../view');\nmodule.exports = ScreenLayerView.img = ScreenLayerView.extend({\n  template: '<img />'\n});",
    "'use strict';\nvar MappableState = require('./../mappable/state');\nvar LayerState = MappableState.extend({\n  idAttribute: 'name',\n  typeAttribute: 'type',\n\n  props: {\n    active: ['boolean', true, true],\n    backfaceVisibility: ['boolean', true, false],\n    name: ['string', true, null],\n    opacity: {\n      type: 'number',\n      default: 1,\n      min: 0,\n      max: 1\n    },\n    perspective: {\n      type: 'number',\n      default: 0,\n      min: -100,\n      max: 100\n    },\n    rotateX: {\n      type: 'number',\n      default: 0,\n      min: -360,\n      max: 360\n    },\n    rotateY: {\n      type: 'number',\n      default: 0,\n      min: -360,\n      max: 360\n    },\n    rotateZ: {\n      type: 'number',\n      default: 0,\n      min: -360,\n      max: 360\n    },\n    translateX: {\n      type: 'number',\n      default: 0,\n      min: -100,\n      max: 100\n    },\n    translateY: {\n      type: 'number',\n      default: 0,\n      min: -100,\n      max: 100\n    },\n    // translateZ: {\n    //   type: 'number',\n    //   default: 0,\n    //   min: -100,\n    //   max: 100\n    // },\n    scaleX: {\n      type: 'number',\n      default: 100,\n      min: -1000,\n      max: 1000\n    },\n    scaleY: {\n      type: 'number',\n      default: 100,\n      min: -1000,\n      max: 1000\n    },\n    // scaleZ: {\n    //   type: 'number',\n    //   default: 100,\n    //   min: -1000,\n    //   max: 1000\n    // },\n    originX: {\n      type: 'number',\n      required: false,\n      default: 0\n    },\n    originY: {\n      type: 'number',\n      required: false,\n      default: 0\n    },\n    skewX: {\n      type: 'number',\n      required: false,\n      default: 0,\n      min: -360,\n      max: 360\n    },\n    skewY: {\n      type: 'number',\n      required: false,\n      default: 0,\n      min: -360,\n      max: 360\n    },\n    type: ['string', true, 'default']\n  },\n\n  derived: {\n    width: {\n      deps: ['collection', 'collection.parent', 'collection.parent.width'],\n      fn: function() {\n        if (!this.screenView) { return 400; }\n        return this.screenView.width || this.screenView.el.clientWidth;\n      }\n    },\n    height: {\n      deps: ['collection', 'collection.parent', 'collection.parent.height'],\n      fn: function() {\n        if (!this.screenView) { return 300; }\n        return this.screenView.height || this.screenView.el.clientHeight;\n      }\n    }\n  },\n\n  collections: MappableState.prototype.collections\n});\nmodule.exports = LayerState;",
    "'use strict';\nvar ScreenLayerState = require('./../state');\nmodule.exports = ScreenLayerState.SVG = ScreenLayerState.extend({\n  props: {\n    src: ['string', true, null]\n  },\n\n  initialize: function() {\n    if (!this.src) {\n      throw new Error('Missing src attribute for SVG layer');\n    }\n  }\n});",
    "'use strict';\n\nvar ScreenLayerView = require('./../view');\nmodule.exports = ScreenLayerView.SVG = ScreenLayerView.extend({\n  template: '<img />',\n\n  bindings: {\n    'model.src': {\n      type: 'attribute',\n      name: 'src'\n    }\n  }\n});",
    "'use strict';\nvar ScreenLayerState = require('./../state');\nmodule.exports = ScreenLayerState.video = ScreenLayerState.extend({\n  props: {\n    src: ['string', true, null]\n  },\n\n  initialize: function() {\n    if (!this.src) {\n      throw new Error('Missing src attribute for video layer');\n    }\n  }\n});",
    "'use strict';\n\nvar ScreenLayerView = require('./../view');\nmodule.exports = ScreenLayerView.video = ScreenLayerView.extend({\n  template: '<video autoplay loop muted></video>',\n\n  bindings: {\n    'model.width': {\n      name: 'width',\n      type: 'attribute'\n    },\n    'model.height': {\n      name: 'height',\n      type: 'attribute'\n    },\n    'model.src': {\n      type: 'attribute',\n      name: 'src'\n    }\n  }\n});",
    "'use strict';\nvar View = window.VFDeps.View;\n\nvar LayerView = View.extend({\n  template: function() {\n    return '<div class=\"missing-layer-view\" style=\"will-change:transform, opacity, backfaceVisibility;width:100%;height:100%;display:table\">'+\n              '<div style=\"display:table-cell;color:#a66;vertical-align:middle;text-align:center;font-weight:700;font-size:30px;text-shadow:0 0 4px #000\">' +\n                'Missing ' +\n                '<span data-hook=\"type\"></span> for ' +\n                '<span data-hook=\"name\"></span> ' +\n                'layer view' +\n                '<br/>' +\n                '<span data-hook=\"frametime\"></span> ' +\n              '</div>'+\n            '</div>';\n  },\n\n  derived: {\n    style: {\n      deps: [\n        'model.opacity',\n        'model.skewX',\n        'model.skewY',\n        'model.rotateX',\n        'model.rotateY',\n        'model.rotateZ',\n        'model.translateX',\n        'model.translateY',\n        // 'model.translateZ',\n        'model.scaleX',\n        'model.scaleY',\n        // 'model.scaleZ',\n        'model.originX',\n        'model.originY',\n        'model.backfaceVisibility'\n      ],\n      fn: function() {\n        // console.info('compute %s %s layer styles', this.model.name, this.model.type);\n        return {\n          opacity: this.model.opacity,\n          transform:\n                    'rotateX(' + this.model.rotateX + 'deg) ' +\n                    'rotateY(' + this.model.rotateY + 'deg) ' +\n                    'rotateZ(' + this.model.rotateZ + 'deg) ' +\n                    'translateX(' + this.model.translateX + '%) ' +\n                    'translateY(' + this.model.translateY + '%) ' +\n                    // 'translateZ(' + this.model.translateZ + '%) ' +\n                    'scaleX(' + this.model.scaleX + '%) ' +\n                    'scaleY(' + this.model.scaleY + '%) ' +\n                    // 'scaleZ(' + this.model.scaleZ + '%) ' +\n                    'skewX(' + this.model.skewX + 'deg) ' +\n                    'skewY(' + this.model.skewY + 'deg) ' +\n                    'perspective(' + this.model.perspective + ')' +\n                    ''\n        };\n      }\n    }\n  },\n\n  bindings: {\n    'model.type': '[data-hook=type]',\n    'model.name': '[data-hook=name]',\n    style: {\n      type: function() {\n        var computed = this.style;\n        var style = this.el.style;\n        Object.keys(computed).forEach(function(key) {\n          style[key] = computed[key];\n        });\n      }\n    }\n  },\n\n  update: function() {\n\n  }\n});\n\nmodule.exports = LayerView;",
    "'use strict';\nvar View = window.VFDeps.View;\nvar assign = window.VFDeps.assign;\nvar MappingControlView = View.extend({\n  initialize: function () {\n    var mappingView = this;\n    var target = this.model.targetProperty;\n    var layer = this.model.targetModel;\n\n    this.listenToAndRun(layer, 'change:' + target, function () {\n      mappingView.propValue = layer[target];\n    });\n  },\n\n  derived: {\n    rootView: {\n      deps: ['parent'],\n      fn: function () {\n        for (var inst = this; inst; inst = inst.parent) {\n          if (!inst.parent) { return inst; }\n        }\n      }\n    },\n    signalNames: {\n      deps: ['rootView'],\n      fn: function () {\n        return this.rootView ? this.rootView.signalNames || [] : [];\n      }\n    }\n  },\n\n  events: {\n    'click [name=default-value]': '_defaultValue',\n\n\n    'click [name=clear-mapping]': '_clearMapping',\n\n\n    'focus [data-hook=value][contenteditable=true]': '_valueFocus',\n    'blur [data-hook=value][contenteditable=true]': '_valueBlur',\n\n    'wheel [data-hook=value][contenteditable=true]': '_valueWheel',\n\n    'paste [data-hook=value][contenteditable=true]': '_valueChange',\n    'input [data-hook=value][contenteditable=true]': '_valueChange',\n\n\n    'focus [data-hook=mapping][contenteditable=true]': '_mappingFocus',\n    'blur [data-hook=mapping][contenteditable=true]': '_mappingBlur',\n\n    'paste [data-hook=mapping][contenteditable=true]': '_mappingChange',\n    'input [data-hook=mapping][contenteditable=true]': '_mappingChange'\n  },\n\n\n  _defaultValue: function(evt) {\n    evt.preventDefault();\n    var def = this.model.definition.default;\n    var result = typeof def === 'function' ? def() : def;\n    this.model.targetModel.set(this.model.targetProperty, result);\n  },\n\n\n\n  _clearMapping: function(evt) {\n    evt.preventDefault();\n    this.model.unset('eventNames');\n    this.model.targetModel.trigger('change:mappings', this.model.targetModel.mappings);\n  },\n\n\n\n  _mappingFocus: function() {\n    var helper = this.rootView.suggestionHelper;\n    if (!helper) { return; }\n    var inputEl = this.queryByHook('mapping');\n    var model = this.model;\n    var layer = model.targetModel;\n    helper.attach(inputEl, function (selected) {\n      console.info('selected', selected);\n      model.eventNames = selected;\n      layer.trigger('change:mappings', layer.mappings);\n      helper.detach();\n    }).fill(this.signalNames);\n  },\n\n  _mappingBlur: function(evt) {\n    this.rootView.suggestionHelper.detach();\n    this._mappingChange(evt);\n  },\n\n  _mappingChange: function () {\n    var model = this.model;\n    var layer = model.targetModel;\n    var newEventNames = this.queryByHook('mapping').textContent.trim();\n    if ((model.eventNames || '') === newEventNames) { return; }\n    model.eventNames = newEventNames;\n    layer.trigger('change:mappings', layer.mappings);\n  },\n\n\n\n\n\n\n\n\n\n\n  _valueFocus: function() {\n    var def = this.model.definition;\n    if (!def) {\n      console.warn('no model definition', this.model);\n      return;\n    }\n    if (def.values && def.values.length > 1) {\n      var helper = this.rootView.suggestionHelper;\n      if (!helper) { return; }\n      var inputEl = this.queryByHook('value');\n      helper.attach(inputEl, function() {}).fill(def.values);\n    }\n  },\n\n  _valueBlur: function(evt) {\n    this.rootView.suggestionHelper.detach();\n    this._valueChange(evt);\n  },\n\n\n\n\n\n\n  _valueWheel: function (evt) {\n    if (evt.target !== document.activeElement) { return; }\n\n    var def = this.model.definition;\n    var valueEl = this.queryByHook('value');\n    var value = valueEl.textContent.trim();\n\n    var added = Math.round(evt.wheelDeltaY * (1 / 120));\n\n    if (def.values && def.values.length > 1) {\n      evt.preventDefault();\n      var currentIndex = def.values.indexOf(value);\n      if (currentIndex < 0) { currentIndex = 0; }\n      if (added > 0 && currentIndex === def.values.length - 1) { currentIndex = 0; }\n      else if (added < 0 && currentIndex === 0) { currentIndex = def.values.length - 1; }\n      else { currentIndex += added; }\n      value = def.values[currentIndex];\n    }\n    else if (def.type === 'number') {\n      evt.preventDefault();\n      value = (Number(value) + added);\n      if (def.min) { value = Math.min(def.min, value); }\n      if (def.max) { value = Math.max(def.max, value); }\n    }\n    valueEl.textContent = value;\n    this._valueChange();\n  },\n\n\n\n\n\n  _valueChange: function () {\n    var model = this.model;\n    var layer = model.targetModel;\n    var def = model.definition;\n    if (!def) { return; }\n\n    var value = this.queryByHook('value').textContent.trim();\n    switch (def.type) {\n    case 'number':\n      value = value === '' ? def.default : Number(value);\n      break;\n    case 'boolean':\n      value = value === 'false' || !value ? false : true;\n      break;\n    default:\n      value = value === '' ? def.default : value;\n    }\n\n    if (def.values && def.values.indexOf(value) < 0) {\n      return;\n    }\n\n    if (layer[model.targetProperty] !== value) {\n      layer[model.targetProperty] = value;\n    }\n  },\n\n  session: {\n    popupEl: 'element',\n    popupHolderEl: ['element', false, function () { return document.body; }],\n    propValue: 'any',\n    propEvent: ['string', true, '']\n  },\n\n  bindings: {\n    'model.targetProperty': [\n      { selector: '.prop-name' },\n      { type: 'class' }\n    ],\n    'model.eventNames': [\n      {\n        selector: '[data-hook=value]',\n        type: function(el, val) {\n          el.setAttribute('contenteditable', !val);\n        }\n      },\n      {\n        selector: '[data-hook=mapping]'\n      }\n    ],\n    propValue: '[data-hook=value]'\n  },\n\n  template: [\n    '<div class=\"prop columns\">',\n    '<strong class=\"prop-name column gutter-right\"></strong>',\n    '<span class=\"column columns\">',\n    '<span class=\"column no-grow gutter-horizontal\"><button name=\"default-value\" class=\"vfi-trash-empty\"></button></span>',\n    '<span class=\"column gutter-left\" data-placeholder=\"Value\" data-hook=\"value\"></span>',\n    '</span>',\n    '<span class=\"column columns mapping\">',\n    '<span class=\"column gutter-right\" data-placeholder=\"Events\" contenteditable=\"true\" data-hook=\"mapping\"></span>',\n    '<span class=\"column gutter-left no-grow\"><button name=\"clear-mapping\" class=\"vfi-trash-empty\"></button></span>',\n    '</span>',\n    '</div>'\n  ].join('')\n});\n\n\nMappingControlView.opacity = MappingControlView.extend({\n  template: [\n    '<div class=\"prop columns\">',\n    '<strong class=\"prop-name column gutter-right\"></strong>',\n    '<span class=\"column columns\">',\n    '<span class=\"column no-grow gutter-horizontal\"><button name=\"default-value\" class=\"vfi-trash-empty\"></button></span>',\n    '<span class=\"column gutter-left percents\" data-hook=\"value\"></span>',\n    '</span>',\n    '<span class=\"column columns mapping\">',\n    '<span class=\"column gutter-right\" contenteditable=\"true\" data-hook=\"mapping\"></span>',\n    '<span class=\"column gutter-left no-grow\"><button name=\"clear-mapping\" class=\"vfi-trash-empty\"></button></span>',\n    '</span>',\n    '</div>'\n  ].join(''),\n\n  bindings: assign({}, MappingControlView.prototype.bindings, {\n    propValue: {\n      hook: 'value',\n      type: function (el, val) {\n        el.textContent = Math.round(val || 0);\n      }\n    }\n  })\n});\n\nMappingControlView.blending = MappingControlView.extend({\n  template: [\n    '<div class=\"prop columns\">',\n    '<strong class=\"prop-name column gutter-right\"></strong>',\n    '<span class=\"column columns\">',\n    '<span class=\"column no-grow gutter-horizontal\"><button name=\"default-value\" class=\"vfi-trash-empty\"></button></span>',\n    '<span class=\"column gutter-left\" data-hook=\"value\"></span>',\n    '</span>',\n    '<span class=\"column columns mapping\">',\n    '<span class=\"column gutter-right\" contenteditable=\"true\" data-hook=\"mapping\"></span>',\n    '<span class=\"column gutter-left no-grow\"><button name=\"clear-mapping\" class=\"vfi-trash-empty\"></button></span>',\n    '</span>',\n    '</div>'\n  ].join('')\n});\nmodule.exports = MappingControlView;",
    "'use strict';\nvar State = VFDeps.State;\nvar Collection = VFDeps.Collection;\n\n\nvar midiTransformation = {};\nmidiTransformation.toggleProp = function(val, mapping, targetModel) {\n  return !targetModel[mapping.targetProperty];\n};\n\n\nvar MappingState = State.extend({\n  id: 'targetProperty',\n\n  props: {\n    type: ['string', false, null],\n    value: ['any', false, null],\n    eventNames: ['string', true, ''],\n    targetProperty: ['string', true, '']\n  },\n\n  derived: {\n    targetModel: {\n      deps: ['collection', 'collection.parent'],\n      fn: function () {\n        return this.collection.parent;\n      }\n    },\n    observedModel: {\n      deps: ['targetModel', 'targetModel.parent'],\n      fn: function() {\n        for (var inst = this.targetModel; inst; inst = inst.parent) {\n          if (inst.mappingEventsEmmiter) { return inst.mappingEventsEmmiter === true ? inst : inst.mappingEventsEmmiter; }\n        }\n        return false;\n      }\n    },\n    definition: {\n      deps: ['targetProperty', 'targetModel'],\n      fn: function () {\n        return this.targetModel.constructor.prototype._definition[this.targetProperty];\n      }\n    }\n  },\n\n  applyValue: function(originalVal/*, midiInputState, triggeredEvtName*/) {\n    var val = originalVal;\n    if (typeof this.value !== 'undefined' && this.value !== null) {\n      val = this.value;\n    }\n\n    var fn = this.type;\n    if (typeof fn === 'string') {\n      fn = midiTransformation[fn];\n    }\n\n    if (typeof fn === 'function') {\n      val = fn(originalVal, this, this.targetModel);\n    }\n\n    this.targetModel.set(this.targetProperty, val);\n  },\n\n  delegateMappingEvents: function() {\n    var prev = this.previousAttributes().eventNames;\n    if (prev) {\n      this.stopListening(this.observedModel, prev);\n    }\n\n    if (this.eventNames && this.observedModel) {\n      this.listenTo(this.observedModel, this.eventNames, this.applyValue);\n    }\n  },\n\n  initialize: function() {\n    this.delegateMappingEvents();\n    this.on('change:eventNames', this.delegateMappingEvents);\n  }\n});\n\nvar MappingsCollection = Collection.extend({\n  mainIndex: 'targetProperty',\n\n  comparator: 'targetProperty',\n\n\n  model: function (attrs, options) {\n    var model = new MappingState(attrs, options);\n    if (options.init === false) model.initialize();\n    return model;\n  },\n\n  serialize: function () {\n    return this\n      .map(function (mapping) {\n        return mapping.serialize();\n      });\n  }\n});\n\nvar MappableState = State.extend({\n  collections: {\n    mappings: MappingsCollection\n  // },\n\n  // toJSON: function() {\n  //   var obj = State.prototype.toJSON.apply(this, arguments);\n  //   obj.mappings = obj.mappings || this.mappings.toJSON.apply(this.mappings, arguments);\n  //   return obj;\n  }\n});\nmodule.exports = MappableState;\n",
    "'use strict';\nvar VFDeps = window.VFDeps;\n\nvar State = VFDeps.State;\nvar Collection = VFDeps.Collection;\n\nfunction toPrct(val) {\n  return (100 / 127) * (val || 0);\n}\n\nvar KP3ToggleButoons = [\n  49,\n  50,\n  51,\n  52,\n  53,\n  54,\n  55,\n  56,\n\n  92,\n  95\n];\n\nvar KP3LetterButoons = [\n  36,\n  37,\n  38,\n  39\n];\n\nvar KP3Mappings = {\n  type: {\n    128: 'noteOn',\n    144: 'noteOff',\n    176: 'change',\n    192: 'search',\n    248: 'idle'\n  },\n\n  note: {\n    36: 'buttonA',\n    37: 'buttonB',\n    38: 'buttonC',\n    39: 'buttonD',\n\n    49: 'num1',\n    50: 'num2',\n    51: 'num3',\n    52: 'num4',\n    53: 'num5',\n    54: 'num6',\n    55: 'num7',\n    56: 'num8',\n\n    70: 'padX',\n    71: 'padY',\n    72: 'pad72',\n    73: 'pad73',\n    74: 'pad74',\n    75: 'pad75',\n    76: 'pad76',\n\n    92: 'pad',\n    93: 'effectSlider',\n    94: 'effectKnob',\n    95: 'hold'\n  },\n\n  velocity: {\n    0: function(type, note, velocity) {\n      if (KP3ToggleButoons.indexOf(note) > -1) {\n        return false;\n      }\n      return velocity;\n    },\n\n    64: function(type, note, velocity) {\n      if (KP3LetterButoons.indexOf(note) > -1) {\n        return false;\n      }\n      return toPrct(velocity);\n    },\n\n    100: function(type, note, velocity) {\n      if (KP3LetterButoons.indexOf(note) > -1) {\n        return true;\n      }\n      return toPrct(velocity);\n    },\n\n    127: function(type, note, velocity) {\n      if (KP3ToggleButoons.indexOf(note) > -1) {\n        return true;\n      }\n      return toPrct(velocity);\n    }\n  },\n\n  signalNames: [\n    'kp3:buttonA:noteOn',\n    'kp3:buttonA:noteOff',\n    'kp3:buttonB:noteOn',\n    'kp3:buttonB:noteOff',\n    'kp3:buttonC:noteOn',\n    'kp3:buttonC:noteOff',\n    'kp3:buttonD:noteOn',\n    'kp3:buttonD:noteOff',\n\n    'kp3:num1:noteOn',\n    'kp3:num1:noteOff',\n    'kp3:num2:noteOn',\n    'kp3:num2:noteOff',\n    'kp3:num3:noteOn',\n    'kp3:num3:noteOff',\n    'kp3:num4:noteOn',\n    'kp3:num4:noteOff',\n    'kp3:num5:noteOn',\n    'kp3:num5:noteOff',\n    'kp3:num6:noteOn',\n    'kp3:num6:noteOff',\n    'kp3:num7:noteOn',\n    'kp3:num7:noteOff',\n    'kp3:num8:noteOn',\n    'kp3:num8:noteOff',\n\n    'kp3:effectKnob:change',\n    'kp3:effectSlider:change'\n  ]\n};\n\nvar midiMappings = {\n  'KP3 MIDI 1': {\n    'ALSA library version 1.0.25' : KP3Mappings\n  }\n};\n\n\nvar MIDIState = State.extend({\n  props: {\n    connection: 'string',\n    state: 'string',\n    type: 'string',\n    id: 'string',\n    manufacturer: 'string',\n    name: 'string',\n    version: 'string'\n  },\n\n  session: {\n    active: ['boolean', true, true]\n  },\n\n  derived: {\n    midiMapping: {\n      deps: ['name', 'type', 'version'],\n      fn: function() {\n        var m = midiMappings || {};\n        if (!m[this.name] || !m[this.name][this.version]) {\n          return;\n        }\n        return m[this.name][this.version];\n      }\n    },\n    signalNames: {\n      deps: ['midiMappings'],\n      fn: function() {\n        return this.midiMapping.signalNames;\n      }\n    }\n  }\n});\n\nfunction _result(mapping, scope, value, data) {\n  if (!mapping[scope]) { return value; }\n  if (data[0] === 192) {\n    if (scope === 'velocity') {\n      return toPrct(data[1]);\n    }\n    else if (scope === 'note') {\n      return 'bpmKnob';\n    }\n  }\n\n  var val = mapping[scope][''+value];\n\n  if (!val) { return scope === 'velocity' ? toPrct(value) : value; }\n\n\n  if (typeof val === 'function') {\n    return val(data[0], data[1], data[2]);\n  }\n\n  return scope === 'velocity' ? toPrct(value) : val;\n}\n\nfunction handleMIDIMessage(accessState, model) {\n  function clear() {\n    model.set({\n      signalType: '',\n      signalNote: '',\n      signalVelocity: ''\n    });\n  }\n\n  return function(MIDIMessageEvent) {\n    if (!model.active) { return clear(); }\n\n    var data = MIDIMessageEvent.data;\n    var type = data[0] || 0;\n    if (type === 248) { return clear(); }\n\n    var note = data[1] || 0;\n    var velocity = data[2] || 0;\n\n\n    var obj = {\n      signalType:     _result(model.midiMapping, 'type', type, data),\n      signalNote:     _result(model.midiMapping, 'note', note, data),\n      signalVelocity: _result(model.midiMapping, 'velocity', velocity, data)\n    };\n    var eventName = 'kp3:' + obj.signalNote + ':' + obj.signalType;\n    accessState.trigger(eventName, obj.signalVelocity/*, model, eventName*/);\n\n    model.set(obj);\n  };\n}\n\n\nfunction collectionSignalNames() {\n  var sn = [];\n  this.forEach(function (m) { //jshint ignore: line\n    sn = sn.concat(m.signalNames);\n  });\n  return sn;\n}\nvar MIDIAccessState = State.extend({\n  initialize: function(options) {\n    options = options || {};\n    var accessState = this;\n\n    // window.midiAccessView = this;\n\n    function MIDIAccessChanged() {\n      if (!accessState.MIDIAccess) {\n        accessState.inputs.reset([]);\n        accessState.outputs.reset([]);\n        return;\n      }\n\n      var inputs = [];\n      var outputs = [];\n      var entry;\n      var model;\n\n      for (entry in accessState.MIDIAccess.inputs) {\n        model = new MIDIState({\n          connection: entry[1].connection,\n          state: entry[1].state,\n          type: entry[1].type,\n          id: entry[1].id,\n          manufacturer: entry[1].manufacturer,\n          name: entry[1].name,\n          version: entry[1].version\n        });\n\n        if (model.midiMapping) {\n          if (typeof entry[1].onmidimessage !== 'undefined') {\n            entry[1].onmidimessage = handleMIDIMessage(accessState, model);\n          }\n\n          inputs.push(model);\n        }\n      }\n\n      for (entry in accessState.MIDIAccess.outputs) {\n        model = new MIDIState({\n          connection: entry[1].connection,\n          state: entry[1].state,\n          type: entry[1].type,\n          id: entry[1].id,\n          manufacturer: entry[1].manufacturer,\n          name: entry[1].name,\n          version: entry[1].version\n        });\n\n        if (model.midiMapping) {\n          outputs.push(model);\n        }\n      }\n\n      accessState.inputs.reset(inputs);\n      accessState.outputs.reset(outputs);\n    }\n\n    accessState.on('change:MIDIAccess', MIDIAccessChanged);\n\n    if (typeof options.MIDIAccess === 'undefined') {\n      navigator.requestMIDIAccess()\n        .then(function(MIDIAccess) {\n          accessState.MIDIAccess = MIDIAccess;\n          accessState.MIDIAccess.onstatechange = function(evt) {\n            accessState.MIDIAccess = evt.currentTarget;\n            MIDIAccessChanged();\n          };\n        }, function() {\n          accessState.MIDIAccess = false;\n        });\n    }\n  },\n\n  session: {\n    MIDIAccess: {\n      type: 'any',\n      default: false\n    }\n  },\n\n  collections: {\n    inputs: Collection.extend({\n      signalNames: collectionSignalNames,\n      model: MIDIState\n    }),\n    outputs: Collection.extend({\n      //signalNames: collectionSignalNames,\n      model: MIDIState\n    })\n  },\n\n  toJSON: function() {\n    var obj = {};\n    obj.inputs = this.inputs.toJSON();\n    obj.outputs = this.outputs.toJSON();\n    return obj;\n  },\n\n  derived: {\n    signalNames: {\n      deps: ['inputs'/*, 'outputs'*/],\n      fn: function () {\n        return this.inputs.signalNames();//.concat(this.outputs.signalNames());\n      }\n    }\n  }\n});\n\nmodule.exports = MIDIAccessState;\n",
    "'use strict';\nvar State = VFDeps.State;\nvar Collection = VFDeps.Collection;\nvar LayerState = require('./../layer/state');\nrequire('./../layer/canvas/state');\nrequire('./../layer/video/state');\nrequire('./../layer/svg/state');\nrequire('./../layer/img/state');\nvar SignalState = require('./../signal/state');\nrequire('./../signal/beat/state');\nrequire('./../signal/hsla/state');\nrequire('./../signal/rgba/state');\n\nvar ScreenState = State.extend({\n  collections: {\n    screenLayers: Collection.extend({\n      mainIndex: 'name',\n      model: function(attrs, opts) {\n        var Constructor = LayerState[attrs.type] || LayerState;\n        return new Constructor(attrs, opts);\n      }\n    }),\n\n    screenSignals: Collection.extend({\n      mainIndex: 'name',\n      model: function(attrs, opts) {\n        var Constructor = SignalState[attrs.type] || SignalState;\n        return new Constructor(attrs, opts);\n      }\n    })\n  },\n\n  session: {\n    latency: ['number', true, 0],\n    width: ['number', true, 400],\n    height: ['number', true, 300],\n  },\n\n  toJSON: function() {\n    var obj = State.prototype.toJSON.apply(this, arguments);\n    obj.screenLayers = this.screenLayers.toJSON.apply(this.screenLayers, arguments);\n    obj.screenSignals = this.screenSignals.toJSON.apply(this.screenSignals, arguments);\n    return obj;\n  }\n});\nmodule.exports = ScreenState;",
    "'use strict';\nvar View = window.VFDeps.View;\nvar LayerView = require('./../layer/view');\nrequire('./../layer/canvas/view');\nrequire('./../layer/svg/view');\nrequire('./../layer/video/view');\nrequire('./../layer/img/view');\n\n\n\nvar ScreenView = View.extend({\n  autoRender: true,\n\n  template: '<div class=\"screen\"></div>',\n\n  derived: {\n    signalNames: {\n      deps: ['screenSignals', 'MIDIAccess'],\n      fn: function() {\n        var mic = [];\n        if (this.audioAnalyser) {\n          for (var i = 0; i < this.audioAnalyser.frequencyBinCount; i++) {\n            mic.push('mic:' + i);\n          }\n        }\n        var signals = this.model.screenSignals\n          .map(function(m) {\n            return m.name;\n          })\n          .concat(this.MIDIAccess ? this.MIDIAccess.signalNames : [], mic);\n        return signals;\n      }\n    }\n  },\n\n  props: {\n  },\n\n  session: {\n    frametime: ['number', true, 0],\n    firstframetime: ['any', true, function () {\n      return performance.now();\n    }],\n    ratio: {\n      type: 'number',\n      required: true,\n      default: 4/3,\n      values: [0, 4/3, 16/9]\n    },\n    MIDIAccess: 'state',\n    captureMouse: ['boolean', true, false],\n    captureDebug: ['boolean', true, false],\n    mode: {\n      type: 'string',\n      required: true,\n      default: 'screen',\n      values: ['screen', 'control']\n    }\n  },\n\n  bindings: {\n    'model.width': {\n      type: function () {\n        this.el.style.width = this.model.width + 'px';\n      }\n    },\n    'model.height': {\n      type: function () {\n        this.el.style.height = this.model.height + 'px';\n      }\n    }\n  },\n\n  initialize: function () {\n    var screenView = this;\n    if (!screenView.model) {\n      throw new Error('Missing model option for ScreenView');\n    }\n\n    if (window.BroadcastChannel) {\n      var channel = screenView.channel = new window.BroadcastChannel('vf_bus');\n      channel.onmessage = function(e) {\n        e.data.latency = performance.now() - e.timeStamp;\n        // console.info('update for %s, %s', screenView.cid, e.data.latency);\n        screenView.update(e.data);\n      };\n    }\n  },\n\n  remove: function() {\n    if (this.channel) {\n      this.channel.close();\n    }\n    return View.prototype.remove.apply(this, arguments);\n  },\n\n  resize: function (p) {\n    if (!this.el) { return this; }\n\n    if (this.mode === 'screen') {\n      this.el.style.position = 'fixed';\n      this.el.top = 0;\n      this.el.left = 0;\n      this.el.style.width = '100%';\n      this.el.style.height = '100%';\n      this.model.width = this.el.clientWidth;\n      this.model.height = this.el.clientHeight;\n      return this;\n    }\n\n    p = p || this.el.parentNode;\n    if (p && p.clientWidth) {\n      this.model.width = p.clientWidth;\n      var r = this.ratio || 4/3;\n      this.model.height = Math.floor(this.model.width / r);\n      this.el.style.width = this.model.width + 'px';\n      this.el.style.height = this.model.height + 'px';\n    }\n    return this;\n  },\n\n  render: function() {\n    this.renderWithTemplate();\n    this.layersView = this.renderCollection(this.model.screenLayers, function(opts) {\n      var type = opts.model.getType();\n      var ScreenLayerConstructor = LayerView[type] || LayerView;\n      return new ScreenLayerConstructor(opts);\n    }, this.el, {parent: this});\n    return this.resize();\n  },\n\n  update: function(options) {\n    if (!this.layersView) {\n      return this.render().update(options);\n    }\n\n    this.model.set(options);\n\n    function findLayer(name) {\n      return function(lo) {\n        return lo.name === name;\n      };\n    }\n\n    var triggerChange;\n    var collection = this.model.screenLayers;\n    if (options.screenLayers) {\n      options.screenLayers.forEach(function(layer) {\n        triggerChange = true;\n        var state = collection.get(layer.name);\n        if (state) {\n          state.set(layer, {\n            silent: true\n          });\n        }\n        else {\n          collection.add(layer, {\n            silent: true\n          });\n        }\n      });\n\n      collection.forEach(function(layer) {\n        var found = options.screenLayers.find(findLayer(layer.name));\n        if (!found) {\n          triggerChange = true;\n          collection.remove(layer, {\n            silent: true\n          });\n        }\n      });\n\n      if (triggerChange) {\n        this.trigger('change:screenLayers', collection);\n      }\n    }\n\n    this.layersView.views.forEach(function(subview) {\n      subview.update();\n    });\n\n    return this;\n  }\n});\nmodule.exports = ScreenView;",
    "'use strict';\nvar assign = window.VFDeps.assign;\nvar SignalControlView = require('./../control-view');\nvar BeatSignalControlView = SignalControlView.beatSignal = SignalControlView.extend({\n  template: [\n    '<section class=\"rows signal signal-beat\">',\n    '<header class=\"row\">',\n    '<h3 class=\"name\"></h3>',\n    '</header>',\n\n    '<div class=\"row columns gutter-horizontal gutter-bottom\">',\n    '<div class=\"column result-dot no-grow gutter-right\"></div>',\n    '<div class=\"column result gutter-left\">',\n    '<div class=\"column input\" data-placeholder=\"BPM\" data-hook=\"input\" contenteditable=\"true\"></div>',\n    '</div>',\n    '</div>',\n\n    '<div class=\"row mappings props\"></div>',\n    '</section>'\n  ].join(''),\n\n  bindings: assign({}, SignalControlView.prototype.bindings, {\n    'model.result': [\n      // {\n      //   selector: '.result',\n      //   type: 'text'\n      // },\n      {\n        selector: '.result-dot',\n        type: function(el, val) {\n          el.style.backgroundColor = 'hsla(190, 81%, 67%,' + (val / 100) + ')';\n        }\n      }\n    ]\n  }),\n\n  events: assign({}, SignalControlView.prototype.events, {\n    'input [data-hook=input]': '_updateBPM'\n  }),\n\n  _updateBPM: function() {\n    this.model.input = parseInt(this.queryByHook('input').textContent.trim(), 10);\n    console.info('Changing BPM', this.model.input);\n  },\n\n  render: function () {\n    this.renderWithTemplate();\n    var inputEl = this.queryByHook('input');\n    if (inputEl && !inputEl.textContent) {\n      inputEl.textContent = this.model.input;\n    }\n    return this;\n  }\n});\nmodule.exports = BeatSignalControlView;",
    "'use strict';\nvar SignalState = require('./../state');\n\nvar BeatState = SignalState.extend({\n  initialize: function() {\n    SignalState.prototype.initialize.apply(this, arguments);\n    if (this.observedModel) this.listenTo(this.observedModel, 'frametime', function (value) {\n      if (isNaN(value)) { return; }\n      this.frametime = value;\n    });\n  },\n\n  props: {\n    frametime: ['number', true, 0]\n  },\n\n  derived: {\n    result: {\n      deps: ['timeBetweenBeats', 'frametime'],\n      fn: function() {\n        return this.computeSignal();\n      }\n    },\n    timeBetweenBeats: {\n      deps: ['input'],\n      fn: function() {\n        return (60 * 1000) / Math.max(this.input, 1);\n      }\n    }\n  },\n\n  computeSignal: function() {\n    var preTransform = !this.frametime ? 0 : (100 - (((this.frametime % this.timeBetweenBeats) / this.timeBetweenBeats) * 100));\n    return SignalState.prototype.computeSignal.apply(this, [preTransform]);\n  }\n});\n\nmodule.exports = BeatState;",
    "'use strict';\nvar View = window.VFDeps.View;\nvar SignalDetailsView = require('./details-view');\nvar SignalControlView = View.extend({\n  template: [\n    '<section class=\"rows signal\">',\n    '<header class=\"row\">',\n    '<h3 class=\"row name\"></h3>',\n    '</header>',\n\n    '<div class=\"row gutter-horizontal columns model text-center\">',\n    '<div class=\"column input\"></div>',\n    '<div class=\"column gutter-horizontal no-grow\">&raquo;</div>',\n    '<div class=\"column result\"></div>',\n    '</div>',\n\n    '<div class=\"row gutter-horizontal columns test text-center\">',\n    '<div class=\"column input\" data-placeholder=\"Input\" contenteditable=\"true\"></div>',\n    '<div class=\"column gutter-horizontal no-grow\">&raquo;</div>',\n    '<div class=\"column result\"></div>',\n    '</div>',\n    '</section>'\n  ].join(''),\n\n  session: {\n    input: 'any',\n    showMappings: ['boolean', true, false]\n  },\n\n  derived: {\n    rootView: {\n      deps: ['parent'],\n      fn: function () {\n        for (var inst = this; inst; inst = inst.parent) {\n          if (!inst.parent) { return inst; }\n        }\n      }\n    },\n    result: {\n      deps: ['input', 'model', 'model.transformations'],\n      fn: function() {\n        return this.model.computeSignal(this.input);\n      }\n    }\n  },\n\n  bindings: {\n    'model.name': '.name',\n    'model.input': '.model .input',\n    'model.result': '.model .result',\n    result: '.test .result'\n  },\n\n  events: {\n    'input .test .input': '_testValue',\n    'click header h3': '_showDetails'\n  },\n\n  _showDetails: function () {\n    this.rootView.showDetails(new SignalDetailsView({\n      parent: this,\n      model: this.model,\n    }));\n  },\n\n  _testValue: function(evt) {\n    this.input = evt.target.textContent.trim();\n  },\n\n  render: function () {\n    this.renderWithTemplate();\n    var inputEl = this.query('.test .input');\n    if (inputEl && !inputEl.textContent) {\n      inputEl.textContent = this.input;\n    }\n    return this;\n  }\n});\nmodule.exports = SignalControlView;",
    "'use strict';\nvar assign = window.VFDeps.assign;\nvar DetailsView = require('./../controller/details-view');\nvar TransformationControlView = require('./../transformation/control-view');\nvar transformationFunctions = require('./../transformation/functions');\nvar SignalDetailsView = DetailsView.extend({\n  template: [\n    '<section>',\n    '<header>',\n    '<h3>Details for <span data-hook=\"name\"></span></h3>',\n    '</header>',\n\n    '<div class=\"row mappings props\"></div>',\n\n    '<div class=\"row gutter transformations-control columns\">',\n    '<div class=\"column gutter-right\" data-placeholder=\"New transformation\" data-hook=\"new-transformation-name\" contenteditable=\"true\"></div>',\n    '<div class=\"column gutter-left no-grow\"><button name=\"add-transformation\" class=\"vfi-plus\"></button></div>',\n    '</div>',\n    '<div class=\"row transformations props\"></div>',\n    '</section>'\n  ].join('\\n'),\n\n  subviews: assign({}, DetailsView.prototype.subviews, {\n    transformationsView: {\n      selector: '.transformations',\n      prepareView: function (el) {\n        return this.renderCollection(this.model.transformations, /*function (opts) {\n          var TransformationControlView = VF.TransformationControlView;\n          var Constructor = TransformationControlView[opts.model.targetProperty] || TransformationControlView['type' + opts.model.targetProperty] || TransformationControlView;\n          return new Constructor(opts);\n        }*/TransformationControlView, el);\n      }\n    }\n  }),\n\n  events: {\n    'click [name=add-transformation]': '_addTransformation',\n\n    'focus [data-hook=new-transformation-name]': '_focusName'\n  },\n\n  derived: {\n    rootView: {\n      deps: ['parent'],\n      fn: function () {\n        for (var inst = this; inst; inst = inst.parent) {\n          if (!inst.parent) { return inst; }\n        }\n      }\n    }\n  },\n\n  _focusName: function() {\n    this.rootView.suggestionHelper.attach(this.queryByHook('new-transformation-name')).fill(Object.keys(transformationFunctions));\n  },\n\n  _addTransformation: function () {\n    this.model.transformations.add({\n      name: this.queryByHook('new-transformation-name').textContent.trim()\n    });\n  },\n\n  bindings: {\n    'model.name': '[data-hook=name]'\n  }\n});\nmodule.exports = SignalDetailsView;",
    "'use strict';\nvar assign = window.VFDeps.assign;\nvar SignalControlView = require('./../control-view');\nvar HSLASignalControlView = SignalControlView.hslaSignal = SignalControlView.extend({\n  template: [\n    '<section class=\"rows signal signal-color\">',\n    '<header class=\"row\">',\n    '<h3 class=\"name\"></h3>',\n    '</header>',\n\n    '<div class=\"row columns gutter-horizontal gutter-bottom\">',\n    '<div class=\"column result-color no-grow\"></div>',\n    '<div class=\"column result gutter-left\"></div>',\n    '</div>',\n\n    '<div class=\"row mappings props\"></div>',\n    '</section>'\n  ].join(''),\n\n  bindings: assign({}, SignalControlView.prototype.bindings, {\n    'model.result': [\n      {\n        selector: '.result-color',\n        type: function(el, val) {\n          el.style.backgroundColor = val;\n        }\n      },\n      {\n        selector: '.result',\n        type: 'text'\n      }\n    ]\n  })\n});\nmodule.exports = HSLASignalControlView;",
    "'use strict';\nvar SignalState = require('./../state');\n\nvar _360 = {\n  type: 'number',\n  required: true,\n  default: 180,\n  min: 0,\n  max: 360\n};\nvar _100 = {\n  type: 'number',\n  required: true,\n  default: 100,\n  min: 0,\n  max: 100\n};\n\nvar HSLASignalState = SignalState.hslaSignal = SignalState.extend({\n  session: {\n    hue: _360,\n    saturation: _100,\n    lightness: _100,\n    alpha: _100\n  },\n  derived: {\n    result: {\n      deps: ['hue', 'saturation', 'lightness', 'alpha'],\n      fn: function() {\n        return this.computeSignal();\n      }\n    }\n  },\n  // parseInput: function() {\n  //   var values = _colorValues(this.input);\n  //   return {\n  //     hue: values[0],\n  //     saturation: values[1],\n  //     lightness: values[2],\n  //     alpha: values[3]\n  //   };\n  // },\n  computeSignal: function() {\n    return 'hsla(' + Math.round(this.hue) + ',' + Math.round(this.saturation) + '%,' + Math.round(this.lightness) + '%,' + (Math.round(this.alpha) / 100) + ')';\n  }\n});\n\nmodule.exports = HSLASignalState;",
    "'use strict';\nvar SignalControlView = require('./../control-view');\nvar HSLASignalControlView = require('./../hsla/control-view');\n\nvar RGBASignalControlView = SignalControlView.rgbaSignal = HSLASignalControlView.extend({});\n\nmodule.exports = RGBASignalControlView;",
    "'use strict';\nvar SignalState = require('./../state');\nvar _255 = {\n  type: 'number',\n  required: true,\n  default: 180,\n  min: 0,\n  max: 255\n};\nvar _100 = {\n  type: 'number',\n  required: true,\n  default: 100,\n  min: 0,\n  max: 100\n};\nvar RGBASignalState = SignalState.rgbaSignal = SignalState.extend({\n  session: {\n    red: _255,\n    green: _255,\n    blue: _255,\n    alpha: _100\n  },\n  derived: {\n    result: {\n      deps: ['red', 'green', 'blue', 'alpha'],\n      fn: function() {\n        return this.computeSignal();\n      }\n    }\n  },\n  // parseInput: function() {\n  //   var values = _colorValues(this.input);\n  //   return {\n  //     red: values[0],\n  //     green: values[1],\n  //     blue: values[2],\n  //     alpha: values[3]\n  //   };\n  // },\n  computeSignal: function() {\n    return 'rgba(' + Math.round(this.red) + ',' + Math.round(this.green) + ',' + Math.round(this.blue) + ',' + (Math.round(this.alpha) / 100) + ')';\n  }\n});\nmodule.exports = RGBASignalState;",
    "'use strict';\nvar State = window.VFDeps.State;\nvar Collection = window.VFDeps.Collection;\nvar MappableState = require('./../mappable/state');\n\nvar transformationFunctions = {};\ntransformationFunctions['math.multiply'] = function(val, factor) {\n  return val * factor;\n};\ntransformationFunctions['math.add'] = function(val, added) {\n  return val + added;\n};\ntransformationFunctions['math.subtract'] = function(val, subtracted) {\n  return val - subtracted;\n};\ntransformationFunctions['math.modulo'] = function(val, x) {\n  return val % x;\n};\ntransformationFunctions['math.above'] = function(val, x) {\n  return val > x;\n};\ntransformationFunctions['math.aboveOrEqual'] = function(val, x) {\n  return val >= x;\n};\ntransformationFunctions['math.below'] = function(val, x) {\n  return val < x;\n};\ntransformationFunctions['math.belowOrEqual'] = function(val, x) {\n  return val <= x;\n};\ntransformationFunctions['math.within'] = function(val, min, max) {\n  return val <= max && val >= min;\n};\n\n\nObject.getOwnPropertyNames(Math).forEach(function (p) {\n  if (p !== 'constructor' && typeof Math[p] === 'function') transformationFunctions['math.' + p] = Math[p];\n});\n\nvar _str = ''.constructor.prototype;\nObject.getOwnPropertyNames(_str).forEach(function (p) {\n  if (p !== 'constructor' && typeof _str[p] === 'function') {\n    transformationFunctions['string.' + p] = function(val) {\n      var args = [].slice.apply(arguments).slice(1);\n      _str[p].apply(val, args);\n    };\n  }\n});\n\ntransformationFunctions['string.toBool'] = function(val) {\n  return !(!val || val === 'false' || val === 'null');\n};\ntransformationFunctions['string.toInteger'] = function(val) {\n  return parseInt(val, 10);\n};\ntransformationFunctions['string.toFloat'] = function(val) {\n  return parseFloat(val);\n};\ntransformationFunctions['string.toNumber'] = function(val) {\n  return Number(val);\n};\n\nvar SignalTransformationState = State.extend({\n  props: {\n    name: ['string', true, null],\n    arguments: ['array', true, function () { return []; }]\n  }\n});\n\n\nvar SignalState = MappableState.extend({\n  idAttribute: 'name',\n  typeAttribute: 'type',\n\n  props: {\n    name: ['string', true, null],\n    type: ['string', true, 'default'],\n    defaultValue: ['any', true, function () { return 1; }]\n  },\n\n  session: {\n    input: ['any', true, null]\n  },\n\n  collections: {\n    transformations: Collection.extend({\n      model: SignalTransformationState\n    })\n  },\n\n  derived: {\n    observedModel: {\n      deps: ['collection', 'parent'],\n      fn: function() {\n        for (var inst = this; inst; inst = inst.parent) {\n          if (inst.mappingEventsEmmiter) {\n            return inst.mappingEventsEmmiter === true ? inst : inst.mappingEventsEmmiter;\n          }\n        }\n        return false;\n      }\n    },\n    result: {\n      deps: ['input', 'transformations'],\n      fn: function() {\n        return this.computeSignal();\n      }\n    }\n  },\n\n  computeSignal: function(val) {\n    val = val || this.input;\n\n    this.transformations.forEach(function(transformationState) {\n      var args = [val].concat(transformationState.arguments);\n      val = transformationFunctions[transformationState.name].apply(this, args);\n    });\n\n    return val;\n  },\n\n  initialize: function() {\n    this.on('change:result', function() {\n      if (this.observedModel) this.observedModel.trigger(this.name, this.result);\n    });\n    if (this.input === null || this.input === undefined) {\n      this.input = this.defaultValue;\n    }\n  }\n});\nmodule.exports = SignalState;",
    "'use strict';\nvar SuggestionItem = VFDeps.View.extend({\n  template: '<li></li>',\n  bindings: {\n    'model.text': {type: 'text'}\n  },\n  events: {\n    click: '_handleClick'\n  },\n  _handleClick: function (evt) {\n    evt.preventDefault();\n    this.parent.trigger('selected', this.model.value || this.model.text);\n  }\n});\n\nvar SuggestionView = VFDeps.View.extend({\n  autoRender: true,\n\n  attach: function (el, selectCb, newCollection) {\n    this.inputEl = typeof el === 'string' ? this.parent.query(el) : el;\n    selectCb = selectCb || function(selected) { this.inputEl.textContent = selected; this.detach(); }.bind(this);\n    this.off('selected');\n    this.once('selected', selectCb);\n\n    if (newCollection) {\n      if (newCollection.isCollection) {\n        this.collection = newCollection;\n      }\n      else {\n        this.collection.reset(newCollection);\n      }\n    }\n\n    return this;\n  },\n\n  fill: function (arr) {\n    this.collection.reset(arr.map(function (v) { return {text:v}; }));\n    return this.filterCollection();\n  },\n\n  detach: function () {\n    this.unset('inputEl');\n    this.collection.reset([]);\n    return this;\n  },\n\n  filterCollection: function () {\n    var update = [];\n    if (!this.inputEl) {\n      update = this.collection.serialize();\n    }\n    else {\n      var inputElVal = this.inputEl.textContent || this.inputEl.value;\n\n      if (!inputElVal) {\n        update = this.collection.serialize();\n      }\n      else {\n        update = this.collection.filter(function (suggestion) {\n          return suggestion.text.indexOf(inputElVal) === 0;\n        })/*.map(function(suggestion) {\n          return suggestion;\n        })*/;\n      }\n    }\n\n    this.suggestions.reset(update);\n\n    return this;\n  },\n\n  session: {\n    inputEl: 'element'\n  },\n\n  _handleInput: function() {\n    this.filterCollection();\n  },\n\n  resetPosition: function() {\n    var view = this;\n    if (!view.el || !view.el.parentNode || !view.inputEl) { return view; }\n    view.el.style.visibility = 'hidden';\n\n    setTimeout(function () {\n      if (!view.el || !view.el.parentNode || !view.inputEl) { return; }\n      var ipos = view.inputEl.getBoundingClientRect();\n      var bpos = view.el.getBoundingClientRect();\n\n      if (ipos.top > view.el.parentNode.clientHeight * 0.5) {\n        view.el.style.maxHeight = Math.min(ipos.top, view.el.parentNode.clientHeight * 0.33) + 'px';\n        view.el.style.top = ((ipos.top - view.el.clientHeight) - 3) + 'px';\n      }\n      else {\n        view.el.style.maxHeight = Math.min(ipos.bottom, view.el.parentNode.clientHeight * 0.33) + 'px';\n        view.el.style.top = (ipos.bottom + 3) + 'px';\n      }\n\n      var s = window.getComputedStyle(view.inputEl);\n      view.el.style.textAlign = s.textAlign;\n      if (s.textAlign === 'right') {\n        view.el.style.left = (ipos.left - (bpos.width - ipos.width)) + 'px';\n      }\n      else {\n        view.el.style.left = (ipos.left) + 'px';\n      }\n\n      view.el.style.visibility = 'visible';\n    });\n\n    return view;\n  },\n\n  initialize: function () {\n    if (!this.parent) { throw new Error('Suggestion view need a parent view'); }\n\n    this.collection = this.collection || new VFDeps.Collection([], {parent: this});\n\n    this.on('change:collection', function () {\n      this.listenToAndRun(this.collection, 'add remove reset', this.filterCollection);\n    });\n\n    this.listenTo(this.suggestions, 'add remove reset', this.resetPosition);\n\n    var _handleInput = this._handleInput.bind(this);\n    var _handleBlur = function(evt) {\n      evt.preventDefault();\n    }.bind(this);\n\n    this.on('change:inputEl', function() {\n      var previous = this.previousAttributes();\n      if (previous.inputEl) {\n        previous.inputEl.removeEventListener('blur', _handleBlur);\n        previous.inputEl.removeEventListener('input', _handleInput);\n        previous.inputEl.removeEventListener('change', _handleInput);\n      }\n\n      var list = this.el;\n      var holderEl = this.parent.el;\n      var inputEl = this.inputEl;\n\n      if (!inputEl) {\n        if (this.el && this.el.parentNode === holderEl) {\n          holderEl.removeChild(this.el);\n        }\n        return;\n      }\n\n      if (!list || !holderEl) { return; }\n      if (list.parentNode !== holderEl) {\n\n        var holderElStyle = window.getComputedStyle(holderEl);\n        if (holderElStyle.position === 'static') {\n          holderEl.style.position = 'relative';\n        }\n\n        holderEl.appendChild(list);\n      }\n\n      this.resetPosition();\n      inputEl.addEventListener('blur', _handleBlur);\n      inputEl.addEventListener('input', _handleInput);\n      inputEl.addEventListener('change', _handleInput);\n    });\n\n    var _handleHolderClick = function (evt) {\n      evt.preventDefault();\n      if (evt.target !== this.inputEl && !this.el.contains(evt.target)) {\n        this.detach();\n      }\n    }.bind(this);\n\n    this.listenToAndRun(this.parent, 'change:el', function() {\n      var previous = this.parent.previousAttributes();\n      if (previous.el) {\n        previous.el.removeEventListener('click', _handleHolderClick);\n      }\n      if (this.parent.el) {\n        this.parent.el.addEventListener('click', _handleHolderClick);\n      }\n    });\n  },\n\n  collections: {\n    suggestions: VFDeps.Collection.extend({\n      model: VFDeps.State.extend({\n        props: {\n          text: ['string', true, ''],\n          value: ['any', false, null]\n        }\n      })\n    })\n  },\n\n  template: '<ul class=\"suggestion-view\"></ul>',\n\n  render: function () {\n    this.renderWithTemplate();\n\n    this.items = this.renderCollection(this.suggestions, SuggestionItem, this.el);\n\n    return this;\n  }\n});\nmodule.exports = SuggestionView;",
    "'use strict';\nvar View = window.VFDeps.View;\nvar TransformationControlView = View.extend({\n  template: [\n    '<div class=\"transformation gutter columns\">',\n    '<div class=\"column gutter-right text-right\" data-hook=\"name\"></div>',\n    '<div class=\"column gutter-horizontal no-grow\"><button name=\"remove\" class=\"vfi-trash-empty\"></button></div>',\n    '<div class=\"column gutter-left\" data-hook=\"arguments\" contenteditable=\"true\"></div>',\n    '</div>'\n  ].join('\\n'),\n\n  derived: {\n    rootView: {\n      deps: ['parent'],\n      fn: function () {\n        for (var inst = this; inst; inst = inst.parent) {\n          if (!inst.parent) { return inst; }\n        }\n      }\n    }\n  },\n\n  bindings: {\n    'model.name': '[data-hook=name]',\n    'model.arguments': '[data-hook=arguments]'\n  },\n\n  events: {\n    'click [name=remove]': '_remove',\n\n    'focus [data-hook=arguments]': '_focusArguments',\n    'input [data-hook=arguments]': '_changeArguments',\n    'blur [data-hook=arguments]': '_blurArguments'\n  },\n\n  _remove: function() {\n    this.model.collection.remove(this.model);\n  },\n\n  _focusArguments: function() {},\n  _changeArguments: function() {},\n  _blurArguments: function() {},\n});\n\nmodule.exports = TransformationControlView;",
    "var functions = {};\n\nmodule.exports = functions;"
  ]
}